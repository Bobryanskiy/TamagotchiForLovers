name: Android CI

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

jobs:
#  lint:
#    name: Perform lint check
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Cache Gradle
#        uses: actions/cache@v3
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle-
#
#      - name: Make Gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run lint
#        run: ./gradlew lintDebug
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html

#  unit-test:
#    name: Perform Unit Testing
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Make Gradle executable
#        run: chmod +x ./gradlew
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit_test_report
#          path: app/build/reports/test/testDebugUnitTest/
#
  instrumentation-test:
    name: Perform Instrumentation Testing
#    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2 # 3rd party tool
        with:
          api-level: 29
          script: ./gradlew connectedCheck

      - name: Upload Instrumentation Test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected

  static-code-analysis:
    name: Perform static code analysis
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Java JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: SonarCloud Scan # sonarcloud properties in gradle.properties file
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  debug-apk:
    name: Generate Debug APK
    needs: [ static-code-analysis ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Java JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: sample-app.apk
          path: app/build/outputs/apk/debug/app-debug.apk